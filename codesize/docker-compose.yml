version: '3'

services:
  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: always
    ports:
      - '8086:8086'
    volumes:
      - './data:/root/.influxdbv2'
      - ./letsencrypt/certs:/etc/letsencrypt/certs:ro
    environment:
      - INFLUXD_TLS_CERT=/etc/letsencrypt/certs/metrics.silvertreelabs.io.crt # adjust to match your domain name
      - INFLUXD_TLS_KEY=/etc/letsencrypt/certs/metrics.silvertreelabs.io.key # adjust to match your domain name


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    environment:
      - VIRTUAL_HOST=metrics.silvertreelabs.io # adjust to match your domain name
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=metrics.silvertreelabs.io # adjust to match your domain name
      - LETSENCRYPT_EMAIL=rrishi2024@yahoo.com # adjust to match your email

      - GF_SERVER_CERT_FILE=/etc/letsencrypt/certs/metrics.silvertreelabs.io.crt # adjust to match your domain name
      - GF_SERVER_CERT_KEY=/etc/letsencrypt/certs/metrics.silvertreelabs.io.key # adjust to match your domain name
      - GF_SERVER_PROTOCOL=https

      - GF_SERVER_DOMAIN=metrics.silvertreelabs.io # adjust to match your domain name
      - GF_SECURITY_ADMIN_USER=silvertreeadmin # adjust to create Grafana admin account
      - GF_SECURITY_ADMIN_PASSWORD=silvertreepassword123 # adjust to set Grafana admin password
    volumes:
      - ./letsencrypt/certs:/etc/letsencrypt/certs:ro
      - grafana-data:/var/lib/grafana

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx
    restart: always
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    ports:
      - 80
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./letsencrypt/certs:/etc/nginx/certs:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - REUSE_PRIVATE_KEYS=true
    volumes_from:
      - nginx-proxy
    volumes:
      - ./letsencrypt/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  grafana-data:
    driver: local
